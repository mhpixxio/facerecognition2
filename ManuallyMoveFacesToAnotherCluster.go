package main

import (
	"database/sql"
	"log"
)

func ManuallyMoveFacesToAnotherCluster(db *sql.DB, faceIDs []int, clusterID string) error {
	//get meanVector of new cluster
	var newCluster clusterStruct
	newMeanVectorCluster := [128]float32{}
	newCluster.meanVector = newMeanVectorCluster[:]
	row := db.QueryRow("SELECT * FROM faceclusters WHERE clusterID = ?", clusterID)
	err := row.Scan(&newCluster.clusterID, &newCluster.personName, &newCluster.numberFaces, &newCluster.meanVector[0], &newCluster.meanVector[1], &newCluster.meanVector[2], &newCluster.meanVector[3], &newCluster.meanVector[4], &newCluster.meanVector[5], &newCluster.meanVector[6], &newCluster.meanVector[7], &newCluster.meanVector[8], &newCluster.meanVector[9], &newCluster.meanVector[10], &newCluster.meanVector[11], &newCluster.meanVector[12], &newCluster.meanVector[13], &newCluster.meanVector[14], &newCluster.meanVector[15], &newCluster.meanVector[16], &newCluster.meanVector[17], &newCluster.meanVector[18], &newCluster.meanVector[19], &newCluster.meanVector[20], &newCluster.meanVector[21], &newCluster.meanVector[22], &newCluster.meanVector[23], &newCluster.meanVector[24], &newCluster.meanVector[25], &newCluster.meanVector[26], &newCluster.meanVector[27], &newCluster.meanVector[28], &newCluster.meanVector[29], &newCluster.meanVector[30], &newCluster.meanVector[31], &newCluster.meanVector[32], &newCluster.meanVector[33], &newCluster.meanVector[34], &newCluster.meanVector[35], &newCluster.meanVector[36], &newCluster.meanVector[37], &newCluster.meanVector[38], &newCluster.meanVector[39], &newCluster.meanVector[40], &newCluster.meanVector[41], &newCluster.meanVector[42], &newCluster.meanVector[43], &newCluster.meanVector[44], &newCluster.meanVector[45], &newCluster.meanVector[46], &newCluster.meanVector[47], &newCluster.meanVector[48], &newCluster.meanVector[49], &newCluster.meanVector[50], &newCluster.meanVector[51], &newCluster.meanVector[52], &newCluster.meanVector[53], &newCluster.meanVector[54], &newCluster.meanVector[55], &newCluster.meanVector[56], &newCluster.meanVector[57], &newCluster.meanVector[58], &newCluster.meanVector[59], &newCluster.meanVector[60], &newCluster.meanVector[61], &newCluster.meanVector[62], &newCluster.meanVector[63], &newCluster.meanVector[64], &newCluster.meanVector[65], &newCluster.meanVector[66], &newCluster.meanVector[67], &newCluster.meanVector[68], &newCluster.meanVector[69], &newCluster.meanVector[70], &newCluster.meanVector[71], &newCluster.meanVector[72], &newCluster.meanVector[73], &newCluster.meanVector[74], &newCluster.meanVector[75], &newCluster.meanVector[76], &newCluster.meanVector[77], &newCluster.meanVector[78], &newCluster.meanVector[79], &newCluster.meanVector[80], &newCluster.meanVector[81], &newCluster.meanVector[82], &newCluster.meanVector[83], &newCluster.meanVector[84], &newCluster.meanVector[85], &newCluster.meanVector[86], &newCluster.meanVector[87], &newCluster.meanVector[88], &newCluster.meanVector[89], &newCluster.meanVector[90], &newCluster.meanVector[91], &newCluster.meanVector[92], &newCluster.meanVector[93], &newCluster.meanVector[94], &newCluster.meanVector[95], &newCluster.meanVector[96], &newCluster.meanVector[97], &newCluster.meanVector[98], &newCluster.meanVector[99], &newCluster.meanVector[100], &newCluster.meanVector[101], &newCluster.meanVector[102], &newCluster.meanVector[103], &newCluster.meanVector[104], &newCluster.meanVector[105], &newCluster.meanVector[106], &newCluster.meanVector[107], &newCluster.meanVector[108], &newCluster.meanVector[109], &newCluster.meanVector[110], &newCluster.meanVector[111], &newCluster.meanVector[112], &newCluster.meanVector[113], &newCluster.meanVector[114], &newCluster.meanVector[115], &newCluster.meanVector[116], &newCluster.meanVector[117], &newCluster.meanVector[118], &newCluster.meanVector[119], &newCluster.meanVector[120], &newCluster.meanVector[121], &newCluster.meanVector[122], &newCluster.meanVector[123], &newCluster.meanVector[124], &newCluster.meanVector[125], &newCluster.meanVector[126], &newCluster.meanVector[127])
	if err != nil && err != sql.ErrNoRows {
		log.Printf("error: %v\n", err)
		return err
	}
	//update their vector to the meanVector of the new cluster
	for i := 0; i < len(faceIDs); i++ {
		var faceReturn faceStruct
		newVector := [128]float32{}
		faceReturn.vector = newVector[:]
		row := db.QueryRow("SELECT * FROM faces WHERE faceID = ?", faceIDs[i])
		err = row.Scan(&faceReturn.faceID, &faceReturn.fileID, &faceReturn.x1, &faceReturn.y1, &faceReturn.x2, &faceReturn.y2, &faceReturn.clusterID, &faceReturn.personName, &faceReturn.vector[0], &faceReturn.vector[1], &faceReturn.vector[2], &faceReturn.vector[3], &faceReturn.vector[4], &faceReturn.vector[5], &faceReturn.vector[6], &faceReturn.vector[7], &faceReturn.vector[8], &faceReturn.vector[9], &faceReturn.vector[10], &faceReturn.vector[11], &faceReturn.vector[12], &faceReturn.vector[13], &faceReturn.vector[14], &faceReturn.vector[15], &faceReturn.vector[16], &faceReturn.vector[17], &faceReturn.vector[18], &faceReturn.vector[19], &faceReturn.vector[20], &faceReturn.vector[21], &faceReturn.vector[22], &faceReturn.vector[23], &faceReturn.vector[24], &faceReturn.vector[25], &faceReturn.vector[26], &faceReturn.vector[27], &faceReturn.vector[28], &faceReturn.vector[29], &faceReturn.vector[30], &faceReturn.vector[31], &faceReturn.vector[32], &faceReturn.vector[33], &faceReturn.vector[34], &faceReturn.vector[35], &faceReturn.vector[36], &faceReturn.vector[37], &faceReturn.vector[38], &faceReturn.vector[39], &faceReturn.vector[40], &faceReturn.vector[41], &faceReturn.vector[42], &faceReturn.vector[43], &faceReturn.vector[44], &faceReturn.vector[45], &faceReturn.vector[46], &faceReturn.vector[47], &faceReturn.vector[48], &faceReturn.vector[49], &faceReturn.vector[50], &faceReturn.vector[51], &faceReturn.vector[52], &faceReturn.vector[53], &faceReturn.vector[54], &faceReturn.vector[55], &faceReturn.vector[56], &faceReturn.vector[57], &faceReturn.vector[58], &faceReturn.vector[59], &faceReturn.vector[60], &faceReturn.vector[61], &faceReturn.vector[62], &faceReturn.vector[63], &faceReturn.vector[64], &faceReturn.vector[65], &faceReturn.vector[66], &faceReturn.vector[67], &faceReturn.vector[68], &faceReturn.vector[69], &faceReturn.vector[70], &faceReturn.vector[71], &faceReturn.vector[72], &faceReturn.vector[73], &faceReturn.vector[74], &faceReturn.vector[75], &faceReturn.vector[76], &faceReturn.vector[77], &faceReturn.vector[78], &faceReturn.vector[79], &faceReturn.vector[80], &faceReturn.vector[81], &faceReturn.vector[82], &faceReturn.vector[83], &faceReturn.vector[84], &faceReturn.vector[85], &faceReturn.vector[86], &faceReturn.vector[87], &faceReturn.vector[88], &faceReturn.vector[89], &faceReturn.vector[90], &faceReturn.vector[91], &faceReturn.vector[92], &faceReturn.vector[93], &faceReturn.vector[94], &faceReturn.vector[95], &faceReturn.vector[96], &faceReturn.vector[97], &faceReturn.vector[98], &faceReturn.vector[99], &faceReturn.vector[100], &faceReturn.vector[101], &faceReturn.vector[102], &faceReturn.vector[103], &faceReturn.vector[104], &faceReturn.vector[105], &faceReturn.vector[106], &faceReturn.vector[107], &faceReturn.vector[108], &faceReturn.vector[109], &faceReturn.vector[110], &faceReturn.vector[111], &faceReturn.vector[112], &faceReturn.vector[113], &faceReturn.vector[114], &faceReturn.vector[115], &faceReturn.vector[116], &faceReturn.vector[117], &faceReturn.vector[118], &faceReturn.vector[119], &faceReturn.vector[120], &faceReturn.vector[121], &faceReturn.vector[122], &faceReturn.vector[123], &faceReturn.vector[124], &faceReturn.vector[125], &faceReturn.vector[126], &faceReturn.vector[127])
		//if newCluster already has a personName, use that one, otherwise keep the faceReturn's personName (also important for the name keeping during reclustering)
		if newCluster.personName == "" {
			_, err := db.Exec("REPLACE INTO faces (faceID, fileID, x1, y1, x2, y2, clusterID, personName, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116, v117, v118, v119, v120, v121, v122, v123, v124, v125, v126, v127) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)", faceReturn.faceID, faceReturn.fileID, faceReturn.x1, faceReturn.y1, faceReturn.x2, faceReturn.y2, faceReturn.clusterID, faceReturn.personName, newCluster.meanVector[0], newCluster.meanVector[1], newCluster.meanVector[2], newCluster.meanVector[3], newCluster.meanVector[4], newCluster.meanVector[5], newCluster.meanVector[6], newCluster.meanVector[7], newCluster.meanVector[8], newCluster.meanVector[9], newCluster.meanVector[10], newCluster.meanVector[11], newCluster.meanVector[12], newCluster.meanVector[13], newCluster.meanVector[14], newCluster.meanVector[15], newCluster.meanVector[16], newCluster.meanVector[17], newCluster.meanVector[18], newCluster.meanVector[19], newCluster.meanVector[20], newCluster.meanVector[21], newCluster.meanVector[22], newCluster.meanVector[23], newCluster.meanVector[24], newCluster.meanVector[25], newCluster.meanVector[26], newCluster.meanVector[27], newCluster.meanVector[28], newCluster.meanVector[29], newCluster.meanVector[30], newCluster.meanVector[31], newCluster.meanVector[32], newCluster.meanVector[33], newCluster.meanVector[34], newCluster.meanVector[35], newCluster.meanVector[36], newCluster.meanVector[37], newCluster.meanVector[38], newCluster.meanVector[39], newCluster.meanVector[40], newCluster.meanVector[41], newCluster.meanVector[42], newCluster.meanVector[43], newCluster.meanVector[44], newCluster.meanVector[45], newCluster.meanVector[46], newCluster.meanVector[47], newCluster.meanVector[48], newCluster.meanVector[49], newCluster.meanVector[50], newCluster.meanVector[51], newCluster.meanVector[52], newCluster.meanVector[53], newCluster.meanVector[54], newCluster.meanVector[55], newCluster.meanVector[56], newCluster.meanVector[57], newCluster.meanVector[58], newCluster.meanVector[59], newCluster.meanVector[60], newCluster.meanVector[61], newCluster.meanVector[62], newCluster.meanVector[63], newCluster.meanVector[64], newCluster.meanVector[65], newCluster.meanVector[66], newCluster.meanVector[67], newCluster.meanVector[68], newCluster.meanVector[69], newCluster.meanVector[70], newCluster.meanVector[71], newCluster.meanVector[72], newCluster.meanVector[73], newCluster.meanVector[74], newCluster.meanVector[75], newCluster.meanVector[76], newCluster.meanVector[77], newCluster.meanVector[78], newCluster.meanVector[79], newCluster.meanVector[80], newCluster.meanVector[81], newCluster.meanVector[82], newCluster.meanVector[83], newCluster.meanVector[84], newCluster.meanVector[85], newCluster.meanVector[86], newCluster.meanVector[87], newCluster.meanVector[88], newCluster.meanVector[89], newCluster.meanVector[90], newCluster.meanVector[91], newCluster.meanVector[92], newCluster.meanVector[93], newCluster.meanVector[94], newCluster.meanVector[95], newCluster.meanVector[96], newCluster.meanVector[97], newCluster.meanVector[98], newCluster.meanVector[99], newCluster.meanVector[100], newCluster.meanVector[101], newCluster.meanVector[102], newCluster.meanVector[103], newCluster.meanVector[104], newCluster.meanVector[105], newCluster.meanVector[106], newCluster.meanVector[107], newCluster.meanVector[108], newCluster.meanVector[109], newCluster.meanVector[110], newCluster.meanVector[111], newCluster.meanVector[112], newCluster.meanVector[113], newCluster.meanVector[114], newCluster.meanVector[115], newCluster.meanVector[116], newCluster.meanVector[117], newCluster.meanVector[118], newCluster.meanVector[119], newCluster.meanVector[120], newCluster.meanVector[121], newCluster.meanVector[122], newCluster.meanVector[123], newCluster.meanVector[124], newCluster.meanVector[125], newCluster.meanVector[126], newCluster.meanVector[127])
			if err != nil {
				log.Println(err)
				return err
			}
		} else {
			_, err := db.Exec("REPLACE INTO faces (faceID, fileID, x1, y1, x2, y2, clusterID, personName, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116, v117, v118, v119, v120, v121, v122, v123, v124, v125, v126, v127) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)", faceReturn.faceID, faceReturn.fileID, faceReturn.x1, faceReturn.y1, faceReturn.x2, faceReturn.y2, faceReturn.clusterID, newCluster.personName, newCluster.meanVector[0], newCluster.meanVector[1], newCluster.meanVector[2], newCluster.meanVector[3], newCluster.meanVector[4], newCluster.meanVector[5], newCluster.meanVector[6], newCluster.meanVector[7], newCluster.meanVector[8], newCluster.meanVector[9], newCluster.meanVector[10], newCluster.meanVector[11], newCluster.meanVector[12], newCluster.meanVector[13], newCluster.meanVector[14], newCluster.meanVector[15], newCluster.meanVector[16], newCluster.meanVector[17], newCluster.meanVector[18], newCluster.meanVector[19], newCluster.meanVector[20], newCluster.meanVector[21], newCluster.meanVector[22], newCluster.meanVector[23], newCluster.meanVector[24], newCluster.meanVector[25], newCluster.meanVector[26], newCluster.meanVector[27], newCluster.meanVector[28], newCluster.meanVector[29], newCluster.meanVector[30], newCluster.meanVector[31], newCluster.meanVector[32], newCluster.meanVector[33], newCluster.meanVector[34], newCluster.meanVector[35], newCluster.meanVector[36], newCluster.meanVector[37], newCluster.meanVector[38], newCluster.meanVector[39], newCluster.meanVector[40], newCluster.meanVector[41], newCluster.meanVector[42], newCluster.meanVector[43], newCluster.meanVector[44], newCluster.meanVector[45], newCluster.meanVector[46], newCluster.meanVector[47], newCluster.meanVector[48], newCluster.meanVector[49], newCluster.meanVector[50], newCluster.meanVector[51], newCluster.meanVector[52], newCluster.meanVector[53], newCluster.meanVector[54], newCluster.meanVector[55], newCluster.meanVector[56], newCluster.meanVector[57], newCluster.meanVector[58], newCluster.meanVector[59], newCluster.meanVector[60], newCluster.meanVector[61], newCluster.meanVector[62], newCluster.meanVector[63], newCluster.meanVector[64], newCluster.meanVector[65], newCluster.meanVector[66], newCluster.meanVector[67], newCluster.meanVector[68], newCluster.meanVector[69], newCluster.meanVector[70], newCluster.meanVector[71], newCluster.meanVector[72], newCluster.meanVector[73], newCluster.meanVector[74], newCluster.meanVector[75], newCluster.meanVector[76], newCluster.meanVector[77], newCluster.meanVector[78], newCluster.meanVector[79], newCluster.meanVector[80], newCluster.meanVector[81], newCluster.meanVector[82], newCluster.meanVector[83], newCluster.meanVector[84], newCluster.meanVector[85], newCluster.meanVector[86], newCluster.meanVector[87], newCluster.meanVector[88], newCluster.meanVector[89], newCluster.meanVector[90], newCluster.meanVector[91], newCluster.meanVector[92], newCluster.meanVector[93], newCluster.meanVector[94], newCluster.meanVector[95], newCluster.meanVector[96], newCluster.meanVector[97], newCluster.meanVector[98], newCluster.meanVector[99], newCluster.meanVector[100], newCluster.meanVector[101], newCluster.meanVector[102], newCluster.meanVector[103], newCluster.meanVector[104], newCluster.meanVector[105], newCluster.meanVector[106], newCluster.meanVector[107], newCluster.meanVector[108], newCluster.meanVector[109], newCluster.meanVector[110], newCluster.meanVector[111], newCluster.meanVector[112], newCluster.meanVector[113], newCluster.meanVector[114], newCluster.meanVector[115], newCluster.meanVector[116], newCluster.meanVector[117], newCluster.meanVector[118], newCluster.meanVector[119], newCluster.meanVector[120], newCluster.meanVector[121], newCluster.meanVector[122], newCluster.meanVector[123], newCluster.meanVector[124], newCluster.meanVector[125], newCluster.meanVector[126], newCluster.meanVector[127])
			if err != nil {
				log.Println(err)
				return err
			}
		}
	}
	//move the faces to the new cluster
	for i := 0; i < len(faceIDs); i++ {
		_, err := db.Exec("UPDATE faces SET clusterID=? WHERE faceID=?", clusterID, faceIDs[i])
		if err != nil {
			log.Println(err)
			return err
		}
		log.Printf("faceID %v moved to clusterID %v\n", faceIDs[i], clusterID)
	}
	//update mean vector of cluster
	err = UpdateMeanVector(db, clusterID)
	if err != nil {
		log.Println(err)
		return err
	}
	return nil
}
